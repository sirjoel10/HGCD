#include "string.h"
#include "UART_Handler.h"
#include "main.h"
#include "stm32l4xx_hal.h"

//Private functions

inline void loadMsTimer (uint16_t mS);

extern g Globals;
extern UART_HandleTypeDef huart2;
extern uint8_t txBuffer[10];
extern uint8_t rxBuffer[10];

const uint8_t _ON[4] = 		{"ON\r\n"};
const uint8_t _OFF[5] = 	{"OFF\r\n"};

void uartCommsHandler(void)
{
	if(Globals.msTimer)
	{
		return;
	}
	else
	{
		switch(uart2machine.uart2State)
		{
			case UART2_SEND:
				HAL_NVIC_DisableIRQ(USART2_IRQn);
				clearString(txBuffer);
				if(Globals.flag == true)
				{
					copyString2(_ON, txBuffer);
					HAL_NVIC_EnableIRQ(USART2_IRQn);
					HAL_UART_Transmit_IT(&huart2, txBuffer, 4);
				}
				else
				{
					copyString2(_OFF, txBuffer);
					HAL_NVIC_EnableIRQ(USART2_IRQn);
					HAL_UART_Transmit_IT(&huart2, txBuffer, 5);

				}
				loadMsTimer(10000);
				uart2machine.uart2State = UART2_RECIEVE;
				break;

			case UART2_RECIEVE:
				uart2machine.uart2State = UART2_SEND;
				break;
			default:
				break;

		}
		/*clearString(txBuffer);
		*/

	}
}

inline void loadMsTimer (uint16_t mS)
{
	Globals.msTimer = mS;
}
