#include "CAN_BUS.h"
#include "main.h"
#include "stm32l4xx_hal.h"
#include "dataString.h"


void CANassembleDataPacket(uint16_t data1, uint16_t data2, uint16_t data3, uint16_t data4, uint8_t dataPackets, uint8_t *dataBuffer)
{
	clearString(dataBuffer);
	switch(dataPackets)
	{
		case 1:
			dataBuffer[0] = (data1 & HIGH_BYTE_MASK);
			dataBuffer[1] = (data1 & LOW_BYTE_MASK);
			break;

		case 2:
			dataBuffer[0] = (data1 & HIGH_BYTE_MASK);
			dataBuffer[1] = (data1 & LOW_BYTE_MASK);
			dataBuffer[2] = (data2 & HIGH_BYTE_MASK);
			dataBuffer[3] = (data2 & LOW_BYTE_MASK);
			break;

		case 3:
			dataBuffer[0] = (data1 & HIGH_BYTE_MASK);
			dataBuffer[1] = (data1 & LOW_BYTE_MASK);
			dataBuffer[2] = (data2 & HIGH_BYTE_MASK);
			dataBuffer[3] = (data2 & LOW_BYTE_MASK);
			dataBuffer[4] = (data3 & HIGH_BYTE_MASK);
			dataBuffer[5] = (data3 & LOW_BYTE_MASK);
			break;

		case 4:
			dataBuffer[0] = (data1 & HIGH_BYTE_MASK);
			dataBuffer[1] = (data1 & LOW_BYTE_MASK);
			dataBuffer[2] = (data2 & HIGH_BYTE_MASK);
			dataBuffer[3] = (data2 & LOW_BYTE_MASK);
			dataBuffer[4] = (data3 & HIGH_BYTE_MASK);
			dataBuffer[5] = (data3 & LOW_BYTE_MASK);
			dataBuffer[6] = (data4 & HIGH_BYTE_MASK);
			dataBuffer[7] = (data4 & LOW_BYTE_MASK);
			break;

		default:
			break;
	}
}

void CANinterpretDataPacket(uint16_t data1, uint16_t data2, uint16_t data3, uint16_t data4, uint8_t dataPackets, uint8_t *dataBuffer)
{
	//clearString(dataBuffer);
	switch(dataPackets)
	{
		case 1:
			data1 = dataBuffer[0];
			data1 = data1 << 8;
			data1 = dataBuffer[1];
			break;

		case 2:
			data1 = dataBuffer[0];
			data1 = data1 << 8;
			data1 = dataBuffer[1];
			data2 = dataBuffer[2];
			data2 = data2 << 8;
			data2 = dataBuffer[3];
			break;

		case 3:
			data1 = dataBuffer[0];
			data1 = data1 << 8;
			data1 = dataBuffer[1];
			data2 = dataBuffer[2];
			data2 = data2 << 8;
			data2 = dataBuffer[3];
			data3 = dataBuffer[4];
			data3 = data3 << 8;
			data3 = dataBuffer[5];
			break;

		case 4:
			data1 = dataBuffer[0];
			data1 = data1 << 8;
			data1 = dataBuffer[1];
			data2 = dataBuffer[2];
			data2 = data2 << 8;
			data2 = dataBuffer[3];
			data3 = dataBuffer[4];
			data3 = data3 << 8;
			data3 = dataBuffer[5];
			data4 = dataBuffer[6];
			data4 = data4 << 8;
			data4 = dataBuffer[7];
			break;

		default:
			break;
	}
}
